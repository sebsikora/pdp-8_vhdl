architecture rtl of top_level is
component register_1_bit is
	port ( input:			in std_logic;
			 output:			out std_logic;
			 load:			in std_logic;
			 clk:				in std_logic;
			 not_reset:		in std_logic
	);
end component;
component register_12_bit_split is
	port ( input_hi:										in std_logic_vector(6 downto 0);
			 input_lo:										in std_logic_vector(4 downto 0);
			 output_hi:										out std_logic_vector(6 downto 0);
			 output_lo:										out std_logic_vector(4 downto 0);
			 load_hi:										in std_logic;
			 load_lo:										in std_logic;
			 clear_hi:										in std_logic;
			 clear_lo:										in std_logic;
			 clk:												in std_logic;
			 not_reset:										in std_logic
	);
end component;
component register_12_bit is
	port ( input:											in std_logic_vector(11 downto 0);
			 output:											out std_logic_vector(11 downto 0);
			 load:											in std_logic;
			 clear:											in std_logic;
			 clk:												in std_logic;
			 not_reset:										in std_logic
	);
end component;
component register_output_mux is
	port ( input_0:										in std_logic_vector(11 downto 0);
			 input_1:										in std_logic_vector(11 downto 0);
			 input_2:										in std_logic_vector(11 downto 0);
			 input_3:										in std_logic_vector(11 downto 0);
			 output:											out std_logic_vector(11 downto 0);
			 MA_BUS_SEL:									in std_logic;
			 MD_BUS_SEL:									in std_logic;
			 PC_BUS_SEL:									in std_logic;
			 SR_BUS_SEL:									in std_logic
	);
end component;
component address_comparator is
	port( input:											in std_logic_vector(11 downto 0);
			output:											out std_logic_vector(11 downto 0);
			IS_AUTO_INDEX:									out std_logic
	);
